// Code generated by MockGen. DO NOT EDIT.
// Source: jwt_parser.go

// Package mocks is a generated GoMock package.
package mocks

import (
	context "context"
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
)

// MockJWTValidator is a mock of JWTValidator interface.
type MockJWTValidator struct {
	ctrl     *gomock.Controller
	recorder *MockJWTValidatorMockRecorder
}

// MockJWTValidatorMockRecorder is the mock recorder for MockJWTValidator.
type MockJWTValidatorMockRecorder struct {
	mock *MockJWTValidator
}

// NewMockJWTValidator creates a new mock instance.
func NewMockJWTValidator(ctrl *gomock.Controller) *MockJWTValidator {
	mock := &MockJWTValidator{ctrl: ctrl}
	mock.recorder = &MockJWTValidatorMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockJWTValidator) EXPECT() *MockJWTValidatorMockRecorder {
	return m.recorder
}

// ValidateJWT mocks base method.
func (m *MockJWTValidator) ValidateJWT(ctx context.Context, rawToken string) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "ValidateJWT", ctx, rawToken)
	ret0, _ := ret[0].(error)
	return ret0
}

// ValidateJWT indicates an expected call of ValidateJWT.
func (mr *MockJWTValidatorMockRecorder) ValidateJWT(ctx, rawToken interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "ValidateJWT", reflect.TypeOf((*MockJWTValidator)(nil).ValidateJWT), ctx, rawToken)
}
